Eslint是什么
ESLint是一个用来识别ECMAScript并且按照规则给出报告的代码检测工具，使用它可以避免低级错误和统一代码的风格。ESLint被设计为
完全可以配置的，主要有两种方式来配置ESLint：
在注释中配置：使用JavaScript注释直接把配置嵌入到JS文件中
配置文件：使用下面任一文件来为全部的目录和他的子目录指定配置信息

JavaScript：使用.eslintrc.js文件并导出一个包含配置的对象
YAML：.eslintrc.yaml或者.eslintrc.yml
JSON:eslintrc.json，并且此文件允许使用JS形式的注释
packge.json：在package.json文件中创建eslintConfig属性，所有的配置包含在此属性中

这些文件的优先级则是按照以上出现的顺序（.eslintrc.js > .eslintrcc.yaml > .eslintrc.yml > .eslintrc.json > .eslintrc >package.json）
可以被配置的信息主要分为三类
Environments:你的JavaScript将要运行在什么环境（如：nodejs，browser，commonjs等）中
Globals：执行代码时脚本需要访问的额外全局变量
Rules：开启某些规则，也可以设置规则的等级

配置
指定执行环境
JavaScript代码可以运行在浏览器或nodejs等环境中，每个环境的全局变量都不尽相同（如nodejs中没有DOM相关的全局变量）。在配置文件中可以自由
的指定执行环境
// .eslintrc.js
module.exports = {
  env: {
    browser: true,
    node: true,
  },
};
指定全局变量
可以在配置文件或注释中指定额外的全局变量，false表明变量只读
使用注释来配置
/* global var1, var2 */
/* global var1:false, var2:false */
使用配置文件来配置
// .eslintrc.js
module.exports = {
  globals: {
    var1: true,
    var2: true,
  },
};

规则
在配置文件中可以设置一些规则
这些规则的等级有三种
"off"或者0：规避规则
"warn"或者1：打开规则，并且作为一个警告（不影响exit code）
"error"或者2：打开规则，并且作为一个错误（exit code将会是1）

创建.eslintrc文件 在这个文件里是一个json格式的内容 使用"standard"规则

安装eslint-plugin-html识别script标签下的脚本



editorconfig配置
.editorconfig是一个可以指定统一规范的配置文件，绝大多数代码编辑器都已经支持








